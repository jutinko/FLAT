CMAKE_MINIMUM_REQUIRED(VERSION 2.4)
PROJECT(SpatialIndex)

SET(MYLIB "FLAT")
OPTION(MAKE_EXECUTABLES "Make the executables." ON)
OPTION(DEBUG "Whether to add debug flag to g++." ON)
OPTION(LEAK "Whether to leak memory." OFF)

############## SETTING DIRECTORY PATHS #################
SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/../bin/)
SET(LIBRARY_OUTPUT_PATH    ${CMAKE_SOURCE_DIR}/../lib/)
SET(SRC_DIR ${CMAKE_SOURCE_DIR}/../src/)
SET(APP_DIR ${CMAKE_SOURCE_DIR}/../apps/)
SET(INC_DIR ${CMAKE_SOURCE_DIR}/../include/)
FILE(GLOB SRC_FILES  ${SRC_DIR}/*.cpp)
FILE(GLOB MAIN_FILES ${APP_DIR}*.cpp)

############## DEPENDANCIES #################
find_package(Boost 1.4 COMPONENTS filesystem thread system program_options REQUIRED)

INCLUDE_DIRECTORIES (
  ${CMAKE_SOURCE_DIR}/../include/
  ${CMAKE_SOURCE_DIR}/../../RTREE/include/ 
  ${Boost_INCLUDE_DIRS}/
)

LINK_DIRECTORIES ( 
  ${CMAKE_SOURCE_DIR}/../../RTREE/ 
)

SET(RTREE_LIB spatialindex)

############## COMPILE #################

ADD_DEFINITIONS("-std=c++11 -O0 -g -Wall -DPROFILING -DFATAL -DPROGRESS")

IF (DEBUG)
  ADD_DEFINITIONS("-DDEBUG")
ENDIF (DEBUG)

IF (LEAK)
  ADD_DEFINITIONS("-DLEAK")
ENDIF (LEAK)

ADD_LIBRARY(${MYLIB} STATIC ${SRC_FILES})

IF (MAKE_EXECUTABLES)
  FOREACH(APPNAME ${MAIN_FILES})
    GET_FILENAME_COMPONENT(BASENAME ${APPNAME} NAME_WE)
    ADD_EXECUTABLE(${BASENAME} ${APPNAME})
    TARGET_LINK_LIBRARIES( ${BASENAME} ${MYLIB} ${Boost_LIBRARIES} ${RTREE_LIB})    
  ENDFOREACH(APPNAME ${MAIN_FILES})
ENDIF (MAKE_EXECUTABLES)
